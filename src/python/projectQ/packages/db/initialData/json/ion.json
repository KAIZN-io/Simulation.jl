{
    "copa": {
        "t0_glucose": " Glucose_impuls_start",
        "t1_glucose": " Glucose_impuls_end",
        "Glucose": " glucose_switch[0]"
    },
    "equation": {
        "A_Ar": {
            "component": {
                "patA_Ar1": "(R*T/(c_strich_ATP))*(ATP-c_strich_ATP)*(1+K_eq)"
            },
            "unit": "J mol^-1"
        },
        "J_H": {
            "component": {
                "patJ_H1": "R*T*(L_HH*np.log(H_in/H_out))",
                "patJ_H2": "+R*T*(L_HK*np.log(K_in/K_out))",
                "patJ_H3": "+R*T*(L_HNa*np.log(Na_in/Na_out))",
                "patJ_H4": "+R*T*(L_HCl*np.log(Cl_in/Cl_out))",
                "patJ_H5": "+F*Deltaphi*(L_HH+L_HK+L_HNa-L_HCl)",
                "patJ_H6": "-L_ArH*A_Ar"
            },
            "unit": "mol m^-2 s^-1"
        },
        "J_K": {
            "component": {
                "patJ_K1": "R*T*(L_KH*np.log(H_in/H_out))",
                "patJ_K2": "+R*T*(L_KK*np.log(K_in/K_out))",
                "patJ_K3": "+F*Deltaphi*(L_KH+L_KK)"
            },
            "unit": "mol m^-2 s^-1"
        },
        "J_Na": {
            "component": {
                "patJ_Na1": "R*T*(L_NaH*np.log(H_in/H_out))",
                "patJ_Na2": "+R*T*(L_NaNa*np.log(Na_in/Na_out))",
                "patJ_Na3": "+F*Deltaphi*(L_NaH+L_NaNa)"
            },
            "unit": "mol m^-2 s^-1"
        },
        "J_Cl": {
            "component": {
                "patJ_Cl1": "R*T*(L_ClH*np.log(H_in/H_out))",
                "patJ_Cl2": "+R*T*(L_ClCl*np.log(Cl_in/Cl_out))",
                "patJ_Cl3": "+F*Deltaphi*(L_ClH-L_ClCl)"
            },
            "unit": "mol m^-2 s^-1"
        }
    },
    "ODE": {
        "dL_ArH": {
            "component": {
                "patL_ArH1": "k_incrArH",
                "patL_ArH2": "-k_decrArH*L_ArH"
            },
            "condition": "if t >= t0_glucose and t < t1_glucose else 0",
            "unit": "mol^2 J^-1 m^-2 s^-1"
        },
        "dL_HH": {
            "component": {
                "patL_HH1": "k_incrHH",
                "patL_HH2": "-k_decrHH*L_HH"
            },
            "condition": "if t >= t0_glucose and t < t1_glucose else 0",
            "unit": "mol^2 J^-1 m^-2 s^-1"
        },
        "dATP": {
            "component": {
                "patATP1": "k_ATPincr",
                "patATP2": "-k_ATPdecr*ATP"
            },
            "condition": "if t >= t0_glucose and ATP < 2.5 else 0",
            "unit": "mM"
        },
        "dH_out": {
            "component": {
                "patH_out1": "(J_H*Surf)/V_out"
            },
            "unit": "mM"
        },
        "dK_out": {
            "component": {
                "patK_out1": "(J_K*Surf)/V_out"
            },
            "unit": "mM"
        },
        "dNa_out": {
            "component": {
                "patNa_out1": "(J_Na*Surf)/V_out"
            },
            "unit": "mM"
        },
        "dCl_out": {
            "component": {
                "patCl_out1": "(J_Cl*Surf)/V_out"
            },
            "unit": "mM"
        },
        "dH_in": {
            "component": {
                "patH_in2": "-(J_H*Surf*np.log(10)*H_in)/(V_in*pbc)"
            },
            "unit": "mM"
        },
        "dK_in": {
            "component": {
                "patK_in2": "-(J_K*Surf)/V_in"
            },
            "unit": "mM"
        },
        "dNa_in": {
            "component": {
                "patNa_in2": "-(J_Na*Surf)/V_in"
            },
            "unit": "mM"
        },
        "dCl_in": {
            "component": {
                "patCl_in2": "-(J_Cl*Surf)/V_in"
            },
            "unit": "mM"
        },
        "dDeltaphi": {
            "component": {
                "patDeltaphi2": "-(2*F/C_m)*(J_H+J_K+J_Na-J_Cl)"
            },
            "unit": "V"
        }
    }
}